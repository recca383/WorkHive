<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="StatusColor.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AverageProgress.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vnKlvU08cQAAAABJRU5ErkJggg==
</value>
  </data>
</root>