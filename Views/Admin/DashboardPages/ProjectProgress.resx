<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AverageProgress.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        zq8AAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>