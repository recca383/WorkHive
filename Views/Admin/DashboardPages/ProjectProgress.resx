<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="AverageProgress.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        vvgXn6A5m4WhW3wAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>